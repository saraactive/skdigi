apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ template "microapp.fullname" . }}
  namespace: {{ .Release.Namespace }}
  labels:
    app: {{ template "microapp.fullname" . }}
spec:
  replicas: {{ .Values.replicaCount }}
  selector:
    matchLabels:
      app: {{ template "microapp.fullname" . }}
      version: "current"
  strategy:
    rollingUpdate:
      maxSurge: 1
      maxUnavailable: 0
    type: RollingUpdate
  template:
    metadata:
      labels:
        app: {{ template "microapp.fullname" . }}
        version: "current"
    spec:
      containers:
      - name: {{ template "microapp.fullname" . }}
        image: "{{ .Values.image.repository }}:{{ .Values.image.tag }}"
#        livenessProbe:
#          httpGet:
#            path: /health
#            port: {{ .Values.service.internalPort }}
#            scheme: HTTP
#          initialDelaySeconds: {{ .Values.livenessProbe.initialDelaySeconds}}
#          periodSeconds: {{ .Values.livenessProbe.periodSeconds}}
        name: {{ template "microapp.fullname" . }}
        ports:
        - containerPort: {{ .Values.service.internalPort }}
        resources:
{{ toYaml .Values.resources | indent 10 }}
        envFrom:
        - configMapRef:
            name: {{ template "microapp.envconfigmap" . }}
        env:
          - name: NODE_ENV
            value: "{{ .Values.nodenv }}"
          - name: TASKCOSBINDING
            valueFrom:
              secretKeyRef:
                name: {{ template "microapp.objectstorage-bind" . }}
                key: binding
          - name: TASKFORMSERVER_OAUTH
            valueFrom:
              secretKeyRef:
                name: {{ template "microapp.appid-bind" . }}
                key: binding
          - name: STATIC_FORM_SERVER_URL
            valueFrom:
              configMapKeyRef:
                name: {{ template "microapp.envconfigmap" . }}
                key: STATIC_FORM_SERVER_URL
      imagePullSecrets:
      - name: {{ .Values.image.imagePullSecret }}
